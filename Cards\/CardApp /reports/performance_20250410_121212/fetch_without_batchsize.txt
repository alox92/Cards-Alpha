./Core/Tools/CoreDataOptimizer.swift:160:            let cardFetchRequest: NSFetchRequest<NSFetchRequestResult> = NSFetchRequest(entityName: "CardEntity")
./Core/Tools/CoreDataOptimizer.swift:180:            let deckFetchRequest: NSFetchRequest<NSFetchRequestResult> = NSFetchRequest(entityName: "DeckEntity")
./Core/Tools/CoreDataOptimizer.swift:196:            let tagAssocFetchRequest: NSFetchRequest<NSFetchRequestResult> = NSFetchRequest(entityName: "TagItemAssociationEntity")
./Core/Tools/CoreDataOptimizer.swift:217:        let fetchRequest: NSFetchRequest<NSFetchRequestResult> = NSFetchRequest(entityName: "DeckEntity")
./Core/Tools/CoreDataOptimizer.swift:246:            let reviewFetchRequest: NSFetchRequest<NSFetchRequestResult> = NSFetchRequest(entityName: "CardReviewEntity")
./Core/Tools/CoreDataOptimizer.swift:259:            let sessionFetchRequest: NSFetchRequest<NSFetchRequestResult> = NSFetchRequest(entityName: "StudySessionEntity")
./Core/Managers/CoreDataManager.swift:71:        let fetchRequest: NSFetchRequest<DeckEntity> = DeckEntity.fetchRequest()
./Core/Managers/CoreDataManager.swift:77:        let fetchRequest: NSFetchRequest<DeckEntity> = DeckEntity.fetchRequest()
./Core/Managers/CoreDataManager.swift:117:        let fetchRequest: NSFetchRequest<CardEntity> = CardEntity.fetchRequest()
./Core/Managers/CoreDataManager.swift:123:        let fetchRequest: NSFetchRequest<CardEntity> = CardEntity.fetchRequest()
./Core/Managers/CoreDataManager.swift:155:        let fetchRequest: NSFetchRequest<StudySessionEntity> = StudySessionEntity.fetchRequest()
./Core/Managers/CoreDataManager.swift:189:        let fetchRequest: NSFetchRequest<CardReviewEntity> = CardReviewEntity.fetchRequest()
./Core/Managers/CoreDataManager.swift:195:        let fetchRequest: NSFetchRequest<CardReviewEntity> = CardReviewEntity.fetchRequest()
./Core/Models/Data/MediaEntity.swift:12:    static func fetchRequest() -> NSFetchRequest<MediaEntity> {
./Core/Models/Data/MediaEntity.swift:13:        return NSFetchRequest<MediaEntity>(entityName: "MediaEntity")
./Core/Models/Data/DeckEntity.swift:23:    @nonobjc public class func fetchRequest() -> NSFetchRequest<DeckEntity> {
./Core/Models/Data/DeckEntity.swift:24:        return NSFetchRequest<DeckEntity>(entityName: "DeckEntity")
./Core/Models/Data/StudySessionEntity.swift:24:    @nonobjc public class func fetchRequest() -> NSFetchRequest<StudySessionEntity> {
./Core/Models/Data/StudySessionEntity.swift:25:        return NSFetchRequest<StudySessionEntity>(entityName: "StudySessionEntity")
./Core/Models/Data/CardEntity.swift:30:    @nonobjc public class func fetchRequest() -> NSFetchRequest<CardEntity> {
./Core/Models/Data/CardEntity.swift:31:        return NSFetchRequest<CardEntity>(entityName: "CardEntity")
./Core/Models/Data/TagEntity.swift:16:    @nonobjc public class func fetchRequest() -> NSFetchRequest<TagEntity> {
./Core/Models/Data/TagEntity.swift:17:        return NSFetchRequest<TagEntity>(entityName: "TagEntity")
./Core/Models/Data/CardReviewEntity.swift:21:    @nonobjc public class func fetchRequest() -> NSFetchRequest<CardReviewEntity> {
./Core/Models/Data/CardReviewEntity.swift:22:        return NSFetchRequest<CardReviewEntity>(entityName: "CardReviewEntity")
./Core/Models/Data/TagItemAssociationEntity.swift:15:    @nonobjc public class func fetchRequest() -> NSFetchRequest<TagItemAssociationEntity> {
./Core/Models/Data/TagItemAssociationEntity.swift:16:        return NSFetchRequest<TagItemAssociationEntity>(entityName: "TagItemAssociationEntity")
./Core/Protocols/DataManagementServiceProtocol.swift:34:    func fetch<T: NSManagedObject>(_ type: T.Type, configure: @escaping @Sendable (NSFetchRequest<T>) -> Void) async throws -> [T]
./Core/Protocols/DataManagementServiceProtocol.swift:55:    func deleteMultiple<T: NSManagedObject>(_ type: T.Type, configure: @escaping @Sendable (NSFetchRequest<T>) -> Void) async throws
./Core/Protocols/DataManagementServiceProtocol.swift:61:    func count<T: NSManagedObject>(_ type: T.Type, configure: @escaping @Sendable (NSFetchRequest<T>) -> Void) async throws -> Int
./Core/Services/Study/StudyService.swift:218:            let fetchRequest = NSFetchRequest<StudySessionEntity>(entityName: "StudySessionEntity")
./Core/Services/Study/StudyService.swift:327:                let fetchRequest = NSFetchRequest<CardReviewEntity>(entityName: "CardReviewEntity")
./Core/Services/Study/StudyService.swift:328:                let cardFetchRequest = NSFetchRequest<CardEntity>(entityName: "CardEntity")
./Core/Services/Study/StudyService.swift:385:            let fetchRequest = NSFetchRequest<StudySessionEntity>(entityName: "StudySessionEntity")
./Core/Services/Example/ThreadSafeCoreDataService.swift:78:            let fetchRequest: NSFetchRequest<DeckEntity> = DeckEntity.fetchRequest()
./Core/Services/Example/ThreadSafeCoreDataService.swift:101:            let fetchRequest: NSFetchRequest<DeckEntity> = DeckEntity.fetchRequest()
./Core/Services/Example/ThreadSafeCoreDataService.swift:153:            let fetchRequest: NSFetchRequest<CardEntity> = CardEntity.fetchRequest()
./Core/Services/Example/ThreadSafeCoreDataService.swift:176:            let fetchRequest: NSFetchRequest<CardEntity> = CardEntity.fetchRequest()
./Core/Services/Unified/UnifiedTagService.swift:87:        let fetchRequest: NSFetchRequest<TagEntity> = TagEntity.fetchRequest()
./Core/Services/Unified/UnifiedTagService.swift:110:        let fetchRequest: NSFetchRequest<TagEntity> = TagEntity.fetchRequest()
./Core/Services/Unified/UnifiedTagService.swift:134:        let fetchRequest: NSFetchRequest<TagEntity> = TagEntity.fetchRequest()
./Core/Services/Unified/UnifiedTagService.swift:210:            let fetchRequest: NSFetchRequest<TagEntity> = TagEntity.fetchRequest()
./Core/Services/Unified/UnifiedTagService.swift:250:            let fetchRequest: NSFetchRequest<TagEntity> = TagEntity.fetchRequest()
./Core/Services/Unified/UnifiedTagService.swift:282:        let fetchRequest: NSFetchRequest<TagEntity> = TagEntity.fetchRequest()
./Core/Services/Unified/UnifiedTagService.swift:305:        let fetchRequest: NSFetchRequest<TagEntity> = TagEntity.fetchRequest()
./Core/Services/Unified/UnifiedTagService.swift:436:            let fetchRequest: NSFetchRequest<TagEntity> = TagEntity.fetchRequest()
./Core/Services/Unified/UnifiedTagService.swift:463:            let fetchRequest: NSFetchRequest<TagEntity> = TagEntity.fetchRequest()
./Core/Services/Unified/UnifiedTagService.swift:513:            let fetchRequest: NSFetchRequest<TagEntity> = TagEntity.fetchRequest()
./Core/Services/Unified/UnifiedTagService.swift:559:        let fetchRequest: NSFetchRequest<TagEntity> = TagEntity.fetchRequest()
./Core/Services/Unified/UnifiedTagService.swift:580:        let fetchRequest: NSFetchRequest<TagEntity> = TagEntity.fetchRequest()
./Core/Services/Unified/UnifiedTagService.swift:602:        let fetchRequest: NSFetchRequest<TagEntity> = TagEntity.fetchRequest()
./Core/Services/Unified/UnifiedCardService.swift:110:            let fetchRequest: NSFetchRequest<CardEntity> = CardEntity.fetchRequest()
./Core/Services/Unified/UnifiedCardService.swift:126:            let fetchRequest: NSFetchRequest<CardEntity> = CardEntity.fetchRequest()
./Core/Services/Unified/UnifiedCardService.swift:170:            let fetchRequest: NSFetchRequest<CardEntity> = CardEntity.fetchRequest()
./Core/Services/Unified/UnifiedCardService.swift:195:            let fetchRequest: NSFetchRequest<CardEntity> = CardEntity.fetchRequest()
./Core/Services/Unified/UnifiedCardService.swift:219:            let fetchRequest: NSFetchRequest<CardEntity> = CardEntity.fetchRequest()
./Core/Services/Unified/UnifiedCardService.swift:233:            let fetchRequest: NSFetchRequest<CardEntity> = CardEntity.fetchRequest()
./Core/Services/Unified/UnifiedCardService.swift:249:            let fetchRequest: NSFetchRequest<CardEntity> = CardEntity.fetchRequest()
./Core/Services/Unified/UnifiedCardService.swift:271:            let fetchRequest: NSFetchRequest<CardEntity> = CardEntity.fetchRequest()
./Core/Services/Unified/UnifiedCardService.swift:354:            let fetchRequest: NSFetchRequest<CardEntity> = CardEntity.fetchRequest()
./Core/Services/Unified/UnifiedStudyService.swift:65:        let fetchRequest: NSFetchRequest<StudySessionEntity> = StudySessionEntity.fetchRequest()
./Core/Services/Unified/UnifiedStudyService.swift:86:            let activeSessionFetchRequest: NSFetchRequest<StudySessionEntity> = StudySessionEntity.fetchRequest()
./Core/Services/Unified/UnifiedStudyService.swift:133:            let fetchRequest: NSFetchRequest<StudySessionEntity> = StudySessionEntity.fetchRequest()
./Core/Services/Unified/UnifiedStudyService.swift:167:            let fetchRequest: NSFetchRequest<StudySessionEntity> = StudySessionEntity.fetchRequest()
./Core/Services/Unified/UnifiedStudyService.swift:275:            let fetchRequest: NSFetchRequest<StudySessionEntity> = StudySessionEntity.fetchRequest()
./Core/Services/Unified/UnifiedStudyService.swift:358:        let sessionFetchRequest: NSFetchRequest<StudySessionEntity> = StudySessionEntity.fetchRequest()
./Core/Services/Unified/UnifiedStudyService.swift:370:            let cardsFetchRequest: NSFetchRequest<CardEntity> = CardEntity.fetchRequest()
./Core/Services/Unified/UnifiedStudyService.swift:383:        let sessionFetchRequest: NSFetchRequest<StudySessionEntity> = StudySessionEntity.fetchRequest()
./Core/Services/Unified/UnifiedStudyService.swift:395:            let cardsFetchRequest: NSFetchRequest<CardEntity> = CardEntity.fetchRequest()
./Core/Services/Unified/UnifiedStudyService.swift:450:        let fetchRequest: NSFetchRequest<CardEntity> = CardEntity.fetchRequest()
./Core/Services/Unified/UnifiedStudyService.swift:490:        let fetchRequest: NSFetchRequest<CardEntity> = CardEntity.fetchRequest()
./Core/Services/Unified/UnifiedDeckService.swift:66:        let fetchRequest: NSFetchRequest<DeckEntity> = DeckEntity.fetchRequest()
./Core/Services/Unified/UnifiedDeckService.swift:77:            let fetchRequest: NSFetchRequest<DeckEntity> = DeckEntity.fetchRequest()
./Core/Services/Unified/UnifiedDeckService.swift:110:            let parentFetchRequest: NSFetchRequest<DeckEntity> = DeckEntity.fetchRequest()
./Core/Services/Unified/UnifiedDeckService.swift:132:            let fetchRequest: NSFetchRequest<DeckEntity> = DeckEntity.fetchRequest()
./Core/Services/Unified/UnifiedDeckService.swift:219:            let fetchRequest: NSFetchRequest<DeckEntity> = DeckEntity.fetchRequest()
./Core/Services/Unified/UnifiedDeckService.swift:249:        let fetchRequest: NSFetchRequest<DeckEntity> = DeckEntity.fetchRequest()
./Core/Services/Unified/UnifiedDeckService.swift:265:        let fetchRequest: NSFetchRequest<DeckEntity> = DeckEntity.fetchRequest()
./Core/Services/Unified/UnifiedDeckService.swift:283:            let deckFetchRequest: NSFetchRequest<DeckEntity> = DeckEntity.fetchRequest()
./Core/Services/Unified/UnifiedDeckService.swift:293:            let cardFetchRequest: NSFetchRequest<CardEntity> = CardEntity.fetchRequest()
./Core/Services/Unified/UnifiedDeckService.swift:362:            let deckFetchRequest: NSFetchRequest<DeckEntity> = DeckEntity.fetchRequest()
./Core/Services/Unified/UnifiedDeckService.swift:372:            let cardFetchRequest: NSFetchRequest<CardEntity> = CardEntity.fetchRequest()
./Core/Services/Unified/UnifiedDeckService.swift:447:            let fetchRequest: NSFetchRequest<DeckEntity> = DeckEntity.fetchRequest()
./Core/Services/Unified/UnifiedDeckService.swift:488:            let fetchRequest: NSFetchRequest<DeckEntity> = DeckEntity.fetchRequest()
./Core/Services/Unified/UnifiedDeckService.swift:535:            let decksFetchRequest: NSFetchRequest<DeckEntity> = DeckEntity.fetchRequest()
./Core/Services/Unified/UnifiedDeckService.swift:546:            let cardsFetchRequest: NSFetchRequest<CardEntity> = CardEntity.fetchRequest()
./Core/Services/Unified/UnifiedDeckService.swift:599:            let fetchRequest: NSFetchRequest<DeckEntity> = DeckEntity.fetchRequest()
./Core/Services/Unified/UnifiedDeckService.swift:647:        let fetchRequest: NSFetchRequest<DeckEntity> = DeckEntity.fetchRequest()
./Core/Services/Unified/UnifiedDeckService.swift:671:            let fetchRequest: NSFetchRequest<DeckEntity> = DeckEntity.fetchRequest()
./Core/Services/Unified/UnifiedDeckService.swift:694:            let deckFetchRequest: NSFetchRequest<DeckEntity> = DeckEntity.fetchRequest()
./Core/Services/Unified/UnifiedDeckService.swift:702:            let cardFetchRequest: NSFetchRequest<CardEntity> = CardEntity.fetchRequest()
./Core/Services/Unified/UnifiedDeckService.swift:719:                let oldDeckFetchRequest: NSFetchRequest<DeckEntity> = DeckEntity.fetchRequest()
./Core/Services/Unified/UnifiedDeckService.swift:756:            let deckFetchRequest: NSFetchRequest<DeckEntity> = DeckEntity.fetchRequest()
./Core/Services/Unified/UnifiedDeckService.swift:764:            let cardFetchRequest: NSFetchRequest<CardEntity> = CardEntity.fetchRequest()
./Core/Services/Unified/UnifiedDeckService.swift:804:            let parentFetchRequest: NSFetchRequest<DeckEntity> = DeckEntity.fetchRequest()
./Core/Services/Unified/UnifiedDeckService.swift:812:            let subdeckFetchRequest: NSFetchRequest<DeckEntity> = DeckEntity.fetchRequest()
./Core/Services/Unified/UnifiedDeckService.swift:844:            let parentFetchRequest: NSFetchRequest<DeckEntity> = DeckEntity.fetchRequest()
./Core/Services/Unified/UnifiedDeckService.swift:852:            let subdeckFetchRequest: NSFetchRequest<DeckEntity> = DeckEntity.fetchRequest()
./Core/Services/Unified/UnifiedDeckService.swift:872:            let deckFetchRequest: NSFetchRequest<DeckEntity> = DeckEntity.fetchRequest()
./Core/Services/Unified/UnifiedDeckService.swift:880:            let cardsFetchRequest: NSFetchRequest<CardEntity> = CardEntity.fetchRequest()
./Core/Services/Base/DataManagementService.swift:196:            let fetchRequest = NSFetchRequest<T>(entityName: String(describing: T.self))
./Core/Services/Base/DataManagementService.swift:225:                let fetchRequest = NSFetchRequest<T>(entityName: entityName)
./Core/Services/Base/DataManagementService.swift:239:    public func fetch<T: NSManagedObject>(_ type: T.Type, configure: @escaping @Sendable (NSFetchRequest<T>) -> Void) async throws -> [T] {
./Core/Services/Base/DataManagementService.swift:245:                let fetchRequest = NSFetchRequest<T>(entityName: entityName)
./Core/Services/Base/DataManagementService.swift:295:                let fetchRequest = NSFetchRequest<T>(entityName: entityName)
./Core/Services/Base/DataManagementService.swift:356:                let fetchRequest = NSFetchRequest<T>(entityName: entityName)
./Core/Services/Base/DataManagementService.swift:414:    public func deleteMultiple<T: NSManagedObject>(_ type: T.Type, configure: @escaping @Sendable (NSFetchRequest<T>) -> Void) async throws {
./Core/Services/Base/DataManagementService.swift:420:                let fetchRequest = NSFetchRequest<T>(entityName: entityName)
./Core/Services/Base/DataManagementService.swift:439:    public func count<T: NSManagedObject>(_ type: T.Type, configure: @escaping @Sendable (NSFetchRequest<T>) -> Void) async throws -> Int {
./Core/Services/Base/DataManagementService.swift:445:                let fetchRequest = NSFetchRequest<T>(entityName: entityName)
./Core/Services/Base/DataManagementService.swift:488:            let fetchRequest: NSFetchRequest<NSFetchRequestResult> = NSFetchRequest(entityName: entityName)
./Core/Debug/CoreDataDiagnostics.swift:31:            let request = NSFetchRequest<NSFetchRequestResult>(entityName: "CardEntity")
./Core/Debug/CoreDataDiagnostics.swift:37:            let request = NSFetchRequest<NSFetchRequestResult>(entityName: "CardEntity")
./analysis_tools/swift_coredata_diagnostic/CoreDataDiagnostic.swift:476:        if content.contains("NSFetchRequest") && 
./analysis_tools/swift_coredata_diagnostic/CoreDataFixer.swift:196:            let fetchRequest: NSFetchRequest<CardEntity> = CardEntity.fetchRequest()
./CoreDataOptimizer.swift:154:                    let request = NSFetchRequest<\(entity.name ?? "Entity")>(entityName: "\(entity.name ?? "Entity")")
./CoreDataOptimizer.swift:201:            let request = NSFetchRequest<NSManagedObject>(entityName: entityName)
./CoreDataOptimizer.swift:390:            "NSFetchRequest sans try/catch",
